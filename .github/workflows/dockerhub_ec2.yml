name: CI/CD to EC2

on:
  push:
    branches: ["test"]

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: |
          echo "Building Docker image..."
          docker build -t kevinseya/logistic_login_validation:latest .

      - name: Push Docker Image
        run: |
          echo "Pushing Docker image to Docker Hub..."
          docker push kevinseya/logistic_login_validation:latest

  deploy-to-ec2:
    needs: build-and-push-image
    runs-on: ubuntu-latest
    steps:
      - name: Set up SSH key for EC2 access
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.EC2_PRIVATE_KEY }}

      - name: SSH into EC2 and deploy container
        run: |
          ssh -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_PUBLIC_DNS }} << 'EOF'
            # Verificar e instalar Docker si es necesario.
            if ! command -v docker &> /dev/null; then
              sudo yum update -y
              sudo yum install -y docker
              sudo systemctl start docker
              sudo systemctl enable docker
            fi

            # Bajar la imagen
            sudo docker pull kevinseya/logistic_login_validation:latest

            # Detener y eliminar contenedor anterior
            sudo docker stop logistic_login_validation || true
            sudo docker rm logistic_login_validation || true

            # Generar archivo .env
            echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" > .env
            echo "MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}" >> .env
            echo "MYSQL_HOST=${{ secrets.MYSQL_HOST }}" >> .env
            echo "MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}" >> .env
            echo "MYSQL_PORT=${{ secrets.MYSQL_PORT }}" >> .env
            echo "MYSQL_USER=${{ secrets.MYSQL_USER }}" >> .env
            echo "PG_DATABASE=${{ secrets.PG_DATABASE }}" >> .env
            echo "PG_HOST=${{ secrets.PG_HOST }}" >> .env
            echo "PG_PASSWORD=${{ secrets.PG_PASSWORD }}" >> .env
            echo "PG_PORT=${{ secrets.PG_PORT }}" >> .env
            echo "PG_USER=${{ secrets.PG_USER }}" >> .env
            echo "PORT=${{ secrets.PORT }}" >> .env

            # Ejecutar nuevo contenedor
            sudo docker run -d --name logistic_login_validation \
              --env-file .env \
              -p 5000:5000 \
              kevinseya/logistic_login_validation:latest
          EOF